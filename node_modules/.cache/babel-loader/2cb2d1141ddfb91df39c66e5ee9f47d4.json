{"ast":null,"code":"var _jsxFileName = \"/home/giabao/Documents/AllProject/Project-Js/app-weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nconst API_KEY = '614e558b809ba3d4cd23ac36f0b95536'; //   fdbd7ad156a6e1ceb5d6c1ae0e34411e\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const cityInput = e.target.elements.city.value;\n      const countryInput = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityInput},${countryInput}&APPID=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n\n      if (cityInput && countryInput) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: 'Please enter the value.'\n        });\n      }\n    };\n\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n  }\n\n  render() {\n    const {\n      temperature,\n      city,\n      country,\n      humidity,\n      description,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: temperature,\n      city: city,\n      country: country,\n      humidity: humidity,\n      description: description,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/giabao/Documents/AllProject/Project-Js/app-weather/src/App.js"],"names":["React","Component","Titles","Form","Weather","API_KEY","App","constructor","props","getWeather","e","preventDefault","cityInput","target","elements","city","value","countryInput","country","api_call","fetch","data","json","setState","temperature","main","temp","name","sys","humidity","description","weather","error","undefined","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\nconst API_KEY = '614e558b809ba3d4cd23ac36f0b95536';\n//   fdbd7ad156a6e1ceb5d6c1ae0e34411e\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined,\n    };\n  }\n    \n  getWeather = async (e) => {\n    e.preventDefault();\n    const cityInput = e.target.elements.city.value;\n    const countryInput = e.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityInput},${countryInput}&APPID=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    \n    if(cityInput && countryInput)\n    {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country, \n        humidity: data.main.humidity,\n        description: data.weather[0].description,\n        error: \"\",\n      });\n    }else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        error: 'Please enter the value.',\n      });\n    }\n    \n  }\n\n  render(){\n    const {temperature, city, country, humidity, description, error} = this.state;\n    return <div>\n      <div className='wrapper'>\n        <div className='main'>\n          <div className='container'>\n            <div className='row'>\n                  <Titles/>\n                  <Form getWeather={this.getWeather} />\n                  <Weather \n                    temperature={temperature} \n                    city={city}\n                    country={country} \n                    humidity={humidity} \n                    description={description} \n                    error={error}\n                  />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}