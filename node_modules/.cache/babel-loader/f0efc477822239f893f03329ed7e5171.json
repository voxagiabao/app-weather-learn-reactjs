{"ast":null,"code":"var _jsxFileName = \"/home/giabao/Documents/AllProject/Project-Js/app-weather/src/App.js\";\nimport React, { Component } from \"react\";\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nconst API_KEY = '614e558b809ba3d4cd23ac36f0b95536'; //   fdbd7ad156a6e1ceb5d6c1ae0e34411e\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const cityInput = e.target.elements.city.value;\n      const countryInput = e.target.elements.country.value;\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityInput},${countryInput}&APPID=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n      let temperature = data.main.temp;\n      let city = data.name;\n      let country = data.sys.country;\n      let humidity = data.main.humidity;\n      let description = data.weather[0].description;\n      console.log('temperature ... ', temperature);\n\n      if (cityInput && countryInput) {\n        const a = this.setState = {\n          temperature: temperature,\n          city: city,\n          country: country,\n          humidity: humidity,\n          description: description,\n          error: \"\"\n        };\n      } else {\n        this.setState = {\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: \"\"\n        };\n      }\n\n      console.log('this state in app', this.state);\n    };\n\n    state = {\n      temperature: '',\n      city: '',\n      country: '',\n      humidity: '',\n      description: '',\n      error: ''\n    };\n  }\n\n  render() {\n    //const {temperature, city, country, humidity, description, error} = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: a.temperature // city={city} \n      // country={country} \n      // humidity={humidity} \n      // description={description} \n      // error={error}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/giabao/Documents/AllProject/Project-Js/app-weather/src/App.js"],"names":["React","Component","Titles","Form","Weather","API_KEY","App","constructor","props","getWeather","e","preventDefault","cityInput","target","elements","city","value","countryInput","country","api_call","fetch","data","json","temperature","main","temp","name","sys","humidity","description","weather","console","log","a","setState","error","undefined","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CACA;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAalBC,UAbkB,GAaL,MAAOC,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,SAAS,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBC,IAAlB,CAAuBC,KAAzC;AACA,YAAMC,YAAY,GAAGP,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBI,OAAlB,CAA0BF,KAA/C;AACA,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDR,SAAU,IAAGK,YAAa,UAASZ,OAAQ,eAAhG,CAA5B;AACA,YAAMgB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,UAAIC,WAAW,GAAGF,IAAI,CAACG,IAAL,CAAUC,IAA5B;AACA,UAAIV,IAAI,GAAGM,IAAI,CAACK,IAAhB;AACA,UAAIR,OAAO,GAAGG,IAAI,CAACM,GAAL,CAAST,OAAvB;AACA,UAAIU,QAAQ,GAAGP,IAAI,CAACG,IAAL,CAAUI,QAAzB;AACA,UAAIC,WAAW,GAAGR,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBD,WAAlC;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,WAAhC;;AAEA,UAAGX,SAAS,IAAIK,YAAhB,EAA6B;AAC3B,cAAMgB,CAAC,GAAG,KAAKC,QAAL,GAAiB;AACzBX,UAAAA,WAAW,EAAEA,WADY;AAEzBR,UAAAA,IAAI,EAAEA,IAFmB;AAGzBG,UAAAA,OAAO,EAAEA,OAHgB;AAIzBU,UAAAA,QAAQ,EAAEA,QAJe;AAKzBC,UAAAA,WAAW,EAAEA,WALY;AAMzBM,UAAAA,KAAK,EAAE;AANkB,SAA3B;AAQD,OATD,MASM;AACJ,aAAKD,QAAL,GAAiB;AACfX,UAAAA,WAAW,EAAEa,SADE;AAEfrB,UAAAA,IAAI,EAAEqB,SAFS;AAGflB,UAAAA,OAAO,EAAEkB,SAHM;AAIfR,UAAAA,QAAQ,EAAEQ,SAJK;AAKfP,UAAAA,WAAW,EAAEO,SALE;AAMfD,UAAAA,KAAK,EAAE;AANQ,SAAjB;AAQD;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKK,KAAtC;AACD,KAhDiB;;AAEhBA,IAAAA,KAAK,GAAG;AACNd,MAAAA,WAAW,EAAE,EADP;AAENR,MAAAA,IAAI,EAAE,EAFA;AAGNG,MAAAA,OAAO,EAAE,EAHH;AAINU,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNM,MAAAA,KAAK,EAAE;AAND,KAAR;AAQD;;AAwCDG,EAAAA,MAAM,GAAE;AACN;AAEA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,eAEL,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAK7B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,eAGL,oBAAC,OAAD;AACE,MAAA,WAAW,EAAEwB,CAAC,CAACV,WADjB,CAEE;AACA;AACA;AACA;AACA;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,CAAP;AAYD;;AAlEyB;;AAqE5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Titles from './components/Titles';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\n\nconst API_KEY = '614e558b809ba3d4cd23ac36f0b95536';\n//   fdbd7ad156a6e1ceb5d6c1ae0e34411e\nclass App extends Component {\n  constructor(props){\n    super(props);\n    state = {\n      temperature: '',\n      city: '',\n      country: '',\n      humidity: '',\n      description: '',\n      error: ''\n    }\n  }\n    \n    \n  getWeather = async (e) => {\n    e.preventDefault();\n    const cityInput = e.target.elements.city.value;\n    const countryInput = e.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityInput},${countryInput}&APPID=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n\n    let temperature = data.main.temp;\n    let city = data.name;\n    let country = data.sys.country;\n    let humidity = data.main.humidity;\n    let description = data.weather[0].description\n    \n    console.log('temperature ... ', temperature);\n\n    if(cityInput && countryInput){\n      const a = this.setState = ({\n        temperature: temperature,\n        city: city,\n        country: country, \n        humidity: humidity,\n        description: description,\n        error: \"\"\n      });\n    }else {\n      this.setState = ({\n        temperature: undefined,\n        city: undefined,\n        country: undefined, \n        humidity: undefined,\n        description: undefined,\n        error: \"\"\n      });\n    }\n    console.log('this state in app', this.state);\n  }\n\n  render(){\n    //const {temperature, city, country, humidity, description, error} = this.state;\n    \n    return <div>\n      <Titles/>\n      <Form getWeather={this.getWeather} />\n      <Weather \n        temperature={a.temperature} \n        // city={city} \n        // country={country} \n        // humidity={humidity} \n        // description={description} \n        // error={error}\n      />\n    </div>;\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}